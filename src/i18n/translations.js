const translations = {
  en: {
    tabs: {
      news: 'News',
      settings: 'Settings',
      info: 'Information'
    },
    searchBar: {
      placeholder: 'Search'
    },
    searchResults: {
      found: ' articles found',
      notFound: 'No articles found.'
    },
    settingsOptions: {
      sources: 'Sources',
      algorithm: 'Algorithm',
      button: {
        save: 'Save',
        cancel: 'Cancel'
      },
      sourceTypeFilter: {
        sport: 'Sports',
        general: 'General',
        press: 'Press',
        broadcast: 'TV/Radio'
      }
    },
    switchLabels: {
      on: 'On',
      off: 'Off'
    },
    loading: {
      message: 'Creating page...',
      error: "It wasn't possible to generate the news clusters. Probably not enough articles have been collected yet. Please try later or select another day."
    },
    algorithmInfo: {
      the: 'The',
      top: 'top',
      news: 'news from',
      according: '* according to an',
      algo: 'algorithm'
    },
    dropdown: {
      scoreHigh: 'Score: Highest',
      scoreLow: 'Score: Lowest',
      dateHigh: 'Date: Latest',
      dateLow: 'Date: Oldest'
    },
    items: {
      more: 'More:'
    },
    topics: {
      header: 'Topics'
    },
    algorithmParams: {
      lingo: {
        clusterCountBase: {
          label: 'Desired base cluster count',
          description: 'Base factor used to calculate the number of clusters based on the number of articles on input.'
        },
        minClusterSize: {
          label: 'Minimum cluster size',
          description: 'Determines the minimum number of articles in each cluster. Clusters with less articles than this value won\'t be displayed.'
        },
        maxWordDf: {
          label: 'Maximum word document frequency',
          description: 'Words appearing in more than the percent value of thus attribute will be ignored. A value of 1.0 means that all words will be taken into account, no matter in how many articles they appear.'
        },
        phraseDf: {
          label: 'Phrase Document Frequency threshold',
          description: 'Phrases appearing in fewer articles than this attribute\'s value will be ignored.'
        },
        wordDf: {
          label: 'Word Document Frequency threshold',
          description: 'Words appearing in fewer articles than this attribute\'s value will be ignored.'
        }
      },
      lsh: {
        shingleSize: {
          label: 'Shingle size',
          description: 'A shingle is a set of contiguous words. This attribute\'s value sets the number of words per shingle.'
        },
        hashFunctions: {
          label: 'Shingles per article',
          description: 'This attribute\'s values sets the number of shingles that will be processed (hashed) for each article and subsequently used for assessing the similarity between the articles.'
        },
        numRows: {
          label: 'Shingles in common',
          description: 'How many shingles should the articles have in common to be placed in the same cluster. A lower value will result in less similar articles; an higher value (closer to the value of the \'Shingles per article\' attribute) will result in clusters of more similar articles.'
        },
        minClusterSize: {
          label: 'Minimum cluster size',
          description: 'Determines the minimum number of articles in each cluster. Clusters with less articles than this value won\'t be displayed.'
        }
      }
    },
    algorithmInformation: {
      lingo: ' <h4>Algorithm</h4> <p>The presented news feed was generated by Lingo, an algorithm from the open-source framework <a href="https://project.carrot2.org/">Carrot2</a>.</p> <h4>How does it work?</h4> <p>Lingo\'s operation can be described, in simple terms, as a 4 step sequence.</p> <h5>Pre-processing</h5> <p>First, the news articles are pre-processed. In this phase are applied to the text techniques such as <i>tokenization</i> - transforming the text into a list of individual words -, <i>stemming</i> - reducing inflected words to their word stem -, and the removal of <i>stop words</i> - a language\'s most common words. The goal is to reduce the list of units of text to analyse without impacting their relevance.</p> <h5>Phrase extraction</h5> <p>After pre-processing, the most frequent phrases are extracted from the text. These phrases are used to determine the <i>labels</i> (the "Topics" that are shown on the app\'s sidebar) for each group (<i>cluster</i>) of news articles.</p> <h5>Cluster content discovery</h5> <p>Based on the proximity between the identified <i>labels</i> and the articles\' text, the algorithm determines which articles are to be associated with each <i>label</i>. Articles to which is not possible associate a <i>label</i> are not included in the <i>clusters</i>. <h5>Final cluster formation</h5> <p>Finally, the algorithm forms the <i>clusters</i>, evaluates their score, orders them, and displays them.</p> <h4>References</h4> <p>The following references from Lingo\'s authors allow a deeper inspection of the algorithm\'s operation:</p> <ul> <li> <a href="http://www.cs.put.poznan.pl/dweiss/site/publications/slides/iipwm2004-dweiss-lingo.pdf">Lingo: Search Results Clustering AlgorithmBased on Singular Value Decomposition (Presentation)</a> </li> <li> <a href="https://pdfs.semanticscholar.org/34f5/4619167ea03f99f6e5706d31df16a80b15a2.pdf">Lingo: Search results clustering algorithm based on singular value decomposition (Paper)</a> </li> </ul>',
      lsh: ' <h4>Algorithm</h4> <p>The presented news feed was generated by an algorithm based on Locality-sensitive Hashing (LSH).</p> <h4>How does it work?</h4> <p>The algorithm\'s operation can be described, in simple terms, as a 4 step sequence.</p> <h5>Pre-processing</h5> <p>First, the news articles are pre-processed. In this phase are applied to the text techniques such as the removal of whitespace and <i>stop words</i> - a language\'s most common words. The text is then converted to tokens comprised of contiguous words - shingles. For instance, the text "This is a news article title", would be converted, using 3 word-shingles, to the following shingles: <ul><li>"This is a"</li><li>"is a news"</li><li>"a news article"</li><li>"news article title"</li></ul></p> <h5>Minhashing</h5> <p>Imagine that the articles we want to check for similarity are 10,000 words long each. After converting the text to 3-word shingles, we would have 9,998 shingles (total word length - shingle size + 1) per article. Since each pair would have to be compared, it\'s easy to imagine that this approach wouldn\'t scale if we wanted to compare thousands of documents.</p> <p>One way to improve the efficiency would be comparing just a subset of randomly selected shingles. The minHash technique allows us to do that, without sacrificing too much accuracy. Each shingle is passed through several different hash functions, and the lowest value stored. Due to the way hashes works, selecting the lowest value is equivalent to a random selection. Additionally, the hashed values are stored as integer numbers of fixed length, which allow faster comparisons than strings of variable length (like the original shingles).</p> <p>So, by using minhashing with, for instance, 200 hash functions, documents with thousands of shingles can be represented by a signature with 200 randomly selected components (each component being the minimum hashed value of a shingle).</p> <h5>Locality-sensitive Hashing</h5> <p>Even though minHash reduces the computational workload needed to compare documents, each document would still need to be compared to every other. Locality-sensitive Hashing (LSH) allows further optimization. LSH finds candidate documents for comparison, i.e., documents for which a fraction of the signature\'s components are similar. Documents which do not have components with common with any other are not processed.</p> <p>This means that, rather than comparing every document with each other, the comparison can be restricted to the candidates. In our implementation, the candidates are determined via LSH, but no comparison is made, since the results have shown to be adequate. For each document, a (configurable) number of signature components is passed through a hash function and put on a \'bucket\' identified by the hashed value. Since the hashed value is the \'bucket\' identifier, every other document whose signature components hash to the same value will (probably) fall in the same \'bucket\'. \'Buckets\' that contain more than one document are then merged with the ones containing at least one document in common and the clusters created and returned.</p>'
    }
  },
  pt: {
    tabs: {
      news: 'Notícias',
      settings: 'Definições',
      info: 'Informação'
    },
    searchBar: {
      placeholder: 'Pesquisar'
    },
    searchResults: {
      found: ' artigos encontrados',
      notFound: 'Nenhum artigo encontrado.'
    },
    settingsOptions: {
      sources: 'Fontes',
      algorithm: 'Algoritmo',
      button: {
        save: 'Guardar',
        cancel: 'Cancelar'
      },
      sourceTypeFilter: {
        sport: 'Desporto',
        general: 'Generalistas',
        press: 'Imprensa',
        broadcast: 'TV/Rádio'
      }
    },
    switchLabels: {
      on: 'Ligado',
      off: 'Desligado'
    },
    loading: {
      message: 'A criar página...',
      error: 'Neste momento não é possível gerar os grupos de notícias. Provavelmente ainda não foram recolhidas notícias suficientes. Por favor tente mais logo ou escolha outro dia.'
    },
    algorithmInfo: {
      the: 'As',
      top: 'principais',
      news: 'Notícias de',
      according: '* segundo um',
      algo: 'algoritmo'
    },
    dropdown: {
      scoreHigh: 'Pontuação: mais alta',
      scoreLow: 'Pontuação: mais baixa',
      dateHigh: 'Data: mais recente',
      dateLow: 'Data: mais antiga'
    },
    items: {
      more: 'Mais:'
    },
    topics: {
      header: 'Tópicos'
    },
    algorithmParams: {
      lingo: {
        clusterCountBase: {
          label: 'Nº base de clusters',
          description: 'Factor base usado para calcular o número de clusters.'
        },
        minClusterSize: {
          label: 'Nº mínimo de artigos por cluster',
          description: 'Determina o número mínimo de artigos por cluster. Clusters com menos artigos do que este valor não serão exibidos.'
        },
        maxWordDf: {
          label: 'Frequência máxima das palavras nos documentos',
          description: 'Palavras que apareçam em mais do que o valor percentual deste atributo serão ignoradas. Um valor de 1.0 significa que todas as palavras serão levadas em conta, independentemente do número de documentos em que apareçam.'
        },
        phraseDf: {
          label: 'Frequência limite das frases nos documentos',
          description: 'Frases que apareçam em menos documentos do que o valor deste atributo serão ignoradas.'
        },
        wordDf: {
          label: 'Frequência limite das palavras nos documentos',
          description: 'Palavras que apareçam em menos documentos do que o valor deste atributo serão ignoradas.'
        }
      },
      lsh: {
        shingleSize: {
          label: 'Tamanho dos shingles',
          description: 'Um shingle é um conjunto de palavras contíguas. O valor deste atributo determina o número de palavras por shingle.'
        },
        hashFunctions: {
          label: 'Shingles por artigo',
          description: 'O valor deste atributo determina o número de shingles que serão processadospara cada artigo e posteriormente usados para avaliar a similaridade entre artigos.'
        },
        numRows: {
          label: 'Shingles em comum',
          description: 'Quantos shingles devem os artigos ter em comum para serem colocados no mesmo grupo (cluster). Um valor baixo resultará em artigos menos similares; um valor mais alto (mais próximo do valor do atributo \'Shingles por artigo\') resultará em clusters de artigos mais similares.'
        },
        minClusterSize: {
          label: 'Tamanho mínimo dos clusters',
          description: 'Determina o número mínimo de artigos por cluster. Clusters com menos artigos do que este valor não serão exibidos.'
        }
      }
    },
    algorithmInformation: {
      lingo: ' <h4>Algoritmo</h4> <p>A lista de notícias apresentada foi gerada pelo Lingo, um algoritmo que faz parte da framework open-source <a href="https://project.carrot2.org/">Carrot2</a>.</p> <h4>Como funciona?</h4> <p>O funcionamento do algoritmo Lingo pode ser descrito, de forma simplificada, como uma sequência de 4 passos.</p> <h5>Pré-processamento</h5> <p>Em primeiro lugar, as notícias são pré-processadas. Nesta fase são aplicadas ao texto técnicas como a <i>tokenização</i> - transformar o texto numa lista de palavras individuais -, a <i>stemização</i> - reduzir palavras flexionadas ao seu tronco -, e a remoção de <i>stop words</i> - as palavras mais comuns de uma língua. O objectivo é reduzir a lista de unidades de texto a analisar sem afectar a relevância.</p> <h5>Extração de frases</h5> <p>Após o pré-processamento, são extraídas as frases mais frequentes do texto. Estas frases são usadas para determinar as <i>labels</i> (os "Tópicos" que aparecem na barra lateral da aplicação) dos grupos de notícias (<i>clusters</i>).</p> <h5>Descoberta do conteúdo dos <i>clusters</i></h5> <p>Com base na proximidade entre as <i>labels</i> identificadas e o texto dos documentos, o algoritmo determina quais os documentos a associar a cada <i>label</i>. Os documentos aos quais não é possível atribuir uma <i>label</i> não são incluídos nos <i>clusters</i>. <h5>Formação final dos <i>clusters</i></h5> <p>Por fim, o algoritmo forma os <i>clusters</i>, avalia a pontuação de cada um, ordena-os, e exibe-os.</p> <h4>Referências</h4> <p>As seguintes referências permitem inspecionar com maior detalhe o funcionamento do algoritmo:</p> <ul> <li> <a href="http://www.cs.put.poznan.pl/dweiss/site/publications/slides/iipwm2004-dweiss-lingo.pdf">Lingo: Search Results Clustering AlgorithmBased on Singular Value Decomposition (Presentation)</a> </li> <li> <a href="https://pdfs.semanticscholar.org/34f5/4619167ea03f99f6e5706d31df16a80b15a2.pdf">Lingo: Search results clustering algorithm based on singular value decomposition (Paper)</a> </li> </ul>'
    }
  }
}

export default translations
